{"remainingRequest":"/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/src/components/geo_charts/USDeathToll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/src/components/geo_charts/USDeathToll.vue","mtime":1587945737613},{"path":"/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/node_modules/vuetify-loader/lib/loader.js","mtime":1586829997754},{"path":"/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/node_modules/cache-loader/dist/cjs.js","mtime":1586829989161},{"path":"/Users/garrett_neff/Desktop/Final_Project/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js","mtime":1586829997334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAidnVleCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVVMtRGVhdGgtVG9sbCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG15TWFwc0FwaUtleTogIkFJemFTeUR3cVJNTEh5eExMVFBkRmZxT2Y3aGJFQUs1QXQ5V2VoNCIKICAgIH0KCiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2dldERlYXRoc1BlclN0YXRlJ10pLAogICAgc2Vjb25kTW9zdDogZnVuY3Rpb24oKSB7CiAgICAgIGlmKHRoaXMuZ2V0RGVhdGhzUGVyU3RhdGVbNV0gJiYgdGhpcy5nZXREZWF0aHNQZXJTdGF0ZVs1XVsxXSkgewogICAgICAgIHJldHVybiB0aGlzLmdldERlYXRoc1BlclN0YXRlWzVdWzFdCiAgICAgIH0KICAgICAgZWxzZSB7CiAgICAgICAgcmV0dXJuIDMwMDAKICAgICAgfQogICAgfQoKICB9LAoKfQo="},{"version":3,"sources":["USDeathToll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"USDeathToll.vue","sourceRoot":"src/components/geo_charts","sourcesContent":["<template>\n  <v-container fluid class=\"content-background\">\n    <div class=\"chart-contain\">\n          <GChart\n            type=\"GeoChart\"\n            :settings=\"{packages: ['geochart'], mapsApiKey: myMapsApiKey}\"\n            :data=\"getDeathsPerState\"\n            :options=\"{\n              region: 'US',\n              displayMode: 'regions',\n              resolution: 'provinces',\n              colorAxis: {colors: [ '#D2C9ED',  '#9991B2', '#4D4166', '#281B3F', '#1B1326'], maxValue: secondMost},\n              datalessRegionColor: '#7F7F7F',\n              legend: 'none',\n              title: 'US Death Toll For Each State'\n              }\">\n            </GChart>\n    </div>\n  </v-container>\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nexport default {\n  name: 'US-Death-Toll',\n  data() {\n    return {\n      myMapsApiKey: \"AIzaSyDwqRMLHyxLLTPdFfqOf7hbEAK5At9Weh4\"\n    }\n\n  },\n  computed: {\n    ...mapGetters(['getDeathsPerState']),\n    secondMost: function() {\n      if(this.getDeathsPerState[5] && this.getDeathsPerState[5][1]) {\n        return this.getDeathsPerState[5][1]\n      }\n      else {\n        return 3000\n      }\n    }\n\n  },\n\n}\n</script>\n\n<style scoped>\n  \n  .content-background {\n      min-width:100%;\n\t\t\t/* padding-left:-5%;\n\t\t\tmargin-left:-5%;  */\n      max-height: 40%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  }\n  .chart-contain {\n\t\t\tmax-width: 90%;\n      /* padding-left: 5%;\n      margin-left: 5%;\n      display: flex;\n      justify-content: center;\n      align-items: center; */\n\n    }\n    .descriptors {\n      align-content: center;\n    }\n</style>"]}]}