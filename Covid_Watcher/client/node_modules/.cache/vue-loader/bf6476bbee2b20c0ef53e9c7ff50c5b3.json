{"remainingRequest":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/src/components/graphs/SentimentGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/src/components/graphs/SentimentGraph.vue","mtime":1587935546372},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vuetify-loader/lib/loader.js","mtime":1587935544542},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/cache-loader/dist/cjs.js","mtime":1587935538362},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js","mtime":1587935544236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWFwQWN0aW9ucywgbWFwR2V0dGVyc30gZnJvbSAidnVleCIKZXhwb3J0IGRlZmF1bHQgewoJbmFtZTogJ1NlbnRpbWVudEdyYXBoJywKCWRhdGEoKSB7CgkJcmV0dXJuIHsKCQkJY2hhcnREYXRhOiBbXSwKCQkJY2hhcnRPcHRpb25zOiB7CgkJCQl0aXRsZTogJ0F2ZXJhZ2UgU2VudGltZW50IGJ5IFdlZWsnLAoJCQkJc3VidGl0bGU6ICcnLAoJCQkJY3VydmVUeXBlOiAnZnVuY3Rpb24nLAoJCQkJYXhlczogewoJCQkJCXk6IHsKCQkJCQkJU2VudGltZW50OiB7bGFiZWw6ICdTZW50aW1lbnQnfQoJCQkJCX0KCQkJCX0sCgkJCQl2QXhpczogewoJCQkJCXRpdGxlOiAnU2VudGltZW50JywKCQkJCQlncmlkbGluZXM6IHsKCQkJCQkJY29sb3I6ICd0cmFuc3BhcmVudCcKCQkJCQl9CgkJCQl9LAoJCQkJaEF4aXM6IHsKCQkJCQl0aXRsZTogJ1dlZWtzIFNpbmNlIFllYXIgU3RhcnQnLAoJCQkJCWdyaWRsaW5lczogewoJCQkJCQljb2xvcjogJ3RyYW5zcGFyZW50JwoJCQkJCX0KCQkJCX0sCgkJCQlsZWdlbmQ6IHsKCQkJCQlwb3NpdGlvbjogJ25vbmUnCgkJCQl9LCAKCgkJCX0KCQl9Cgl9LAoJY29tcHV0ZWQ6IHsKCQkuLi5tYXBHZXR0ZXJzKFsiZ2V0U2VudGltZW50RGF0ZSJdKQoJfSwKCW1ldGhvZHM6IHsKCQkuLi5tYXBBY3Rpb25zKFsiZmV0Y2hTZW50aW1lbnREYXRlIl0pCgoJfSwKCWNyZWF0ZWQoKSB7CgkJdGhpcy5mZXRjaFNlbnRpbWVudERhdGUoKQoJfQoJCn0K"},{"version":3,"sources":["SentimentGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"SentimentGraph.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n\t<v-container fluid class=\"content-contain\">\n\t\t<v-card outlined>\n\t\t\t<!-- max-width=\"60%\" -->\n\t\t\t<GChart \n\t\t\ttype=\"LineChart\"\n\t\t\t:data=\"getSentimentDate\"\n\t\t\t:options=\"chartOptions\">\n\t\t</GChart>\n\n\t</v-card>\n\n\t</v-container>\n\n\t\n</template>\n<script>\n\timport {mapActions, mapGetters} from \"vuex\"\n\texport default {\n\t\tname: 'SentimentGraph',\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tchartData: [],\n\t\t\t\tchartOptions: {\n\t\t\t\t\ttitle: 'Average Sentiment by Week',\n\t\t\t\t\tsubtitle: '',\n\t\t\t\t\tcurveType: 'function',\n\t\t\t\t\taxes: {\n\t\t\t\t\t\ty: {\n\t\t\t\t\t\t\tSentiment: {label: 'Sentiment'}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tvAxis: {\n\t\t\t\t\t\ttitle: 'Sentiment',\n\t\t\t\t\t\tgridlines: {\n\t\t\t\t\t\t\tcolor: 'transparent'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\thAxis: {\n\t\t\t\t\t\ttitle: 'Weeks Since Year Start',\n\t\t\t\t\t\tgridlines: {\n\t\t\t\t\t\t\tcolor: 'transparent'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tposition: 'none'\n\t\t\t\t\t}, \n\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t...mapGetters([\"getSentimentDate\"])\n\t\t},\n\t\tmethods: {\n\t\t\t...mapActions([\"fetchSentimentDate\"])\n\n\t\t},\n\t\tcreated() {\n\t\t\tthis.fetchSentimentDate()\n\t\t}\n\t\t\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.content-contain {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\t// max-width: 90%;\n\t\tmin-height:100%;\n\t\tz-index: -1;\n\t}\n\n\t</style>"]}]}