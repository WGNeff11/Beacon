{"remainingRequest":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/src/views/StateTracker.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/src/views/StateTracker.vue","mtime":1587935546376},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/css-loader/dist/cjs.js","mtime":1587935539403},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1587935544236},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/postcss-loader/src/index.js","mtime":1587935542474},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vuetify-loader/lib/loader.js","mtime":1587935544542},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/cache-loader/dist/cjs.js","mtime":1587935538362},{"path":"/Users/JCim/Desktop/cs 316/final-project/Source Code/Covid_Watcher/client/node_modules/vue-loader/lib/index.js","mtime":1587935544236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLmhlYWRlciB7CiAgICBmb250LWZhbWlseTogJ0ZqYWxsYSBPbmUnLCBzYW5zLXNlcmlmOwoJCWZvbnQtc2l6ZTogNDBweDsKICB9Cg=="},{"version":3,"sources":["StateTracker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA","file":"StateTracker.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"6\">\n        <h1 class=\"header\">US State Tracker</h1>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <bubble-chart></bubble-chart>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-card>\n          <v-row>\n            <v-col>\n              \n                <v-select\n                  :v-model=\"model\"\n                  color=\"#FF6B6B\"\n                  class=\"custom\"\n                  :items=\"items\"\n                  attach\n                  :menu-props=\"{ maxHeight: '400'}\"\n                  full-width\n                  single-line\n                  item-color=\"#ACEE00\"\n                  >\n                </v-select>\n\n            </v-col>\n          </v-row>\n\n        <v-row>\n          <v-col>\n            <GChart\n            type=\"GeoChart\"\n            :settings=\"{packages: ['geochart'], mapsApiKey: myMapsApiKey}\"\n            :data=\"getPositiveCasesPerState\"\n            :options=\"{\n              region: 'US',\n              displayMode: 'regions',\n              resolution: 'provinces',\n              colorAxis: {colors: [ '#FF8E2B',  '#E05900', '#D73502', '#B62203', '#801100'], maxValue: secondMost},\n              datalessRegionColor: '#7F7F7F',\n              legend: 'none',\n              chart: {\n                title: 'US average sentiment for each state'\n              }\n            }\">\n            </GChart>\n\n          </v-col>\n        </v-row>\n      \n\n      </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import bubbleChart from \"@/components/graphs/BubbleChart.vue\"\n  import {mapActions, mapGetters} from \"vuex\";\n  export default {\n    name: 'US-Total-Cases',\n    data() {\n      return {\n        items: [\"Case Count\", \"Death Toll\", \"Negative Tests\"],\n        myMapsApiKey: \"AIzaSyDwqRMLHyxLLTPdFfqOf7hbEAK5At9Weh4\",\n        selected: [\n          {id: 1, label: 'Case Count'},\n          {id: 2, label: 'Death Toll'},\n          {id: 3, label: 'Negative Tests'}\n          ]\n      }\n\n    },\n    components: {\n      'bubble-chart': bubbleChart\n    },\n    computed: {\n      ...mapGetters(['getPositiveCasesPerState']),\n      secondMost: function() {\n        if(this.getPositiveCasesPerState[3] && this.getPositiveCasesPerState[3][1]) {\n          return this.getPositiveCasesPerState[3][1]\n        }\n        else {\n          return 21000\n        }\n      }\n\n    },\n    methods: {\n      ...mapActions(['fetchCases'])\n    },\n    created() {\n      this.fetchCases()\n    }\n\n  }\n</script>\n\n<style>\n  .header {\n    font-family: 'Fjalla One', sans-serif;\n\t\tfont-size: 40px;\n  }\n</style>"]}]}